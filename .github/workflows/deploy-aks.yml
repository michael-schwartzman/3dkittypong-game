name: Deploy to AKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: kittypongacr.azurecr.io
  REPOSITORY: 3dkittypong-game
  IMAGE_TAG: ${{ github.sha }}
  AKS_CLUSTER_NAME: games-multi-tenancy
  AKS_RESOURCE_GROUP: 3DKittyPongAKS

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Login to Azure Container Registry
      run: |
        az acr login --name ${REGISTRY%%.*}
    
    - name: Build and push Docker image
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker build -t $REGISTRY/$REPOSITORY:latest .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$REPOSITORY:latest
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME
    
    - name: Install nginx ingress controller
      run: |
        # Add nginx ingress helm repo
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        
        # Install nginx ingress controller
        helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
          --create-namespace \
          --namespace ingress-nginx \
          --set controller.service.type=LoadBalancer \
          --wait --timeout=300s
    
    - name: Deploy to AKS
      run: |
        # Replace image tag placeholder with actual tag
        envsubst < k8s/deployment.yaml | kubectl apply -f -
        
        # Apply other Kubernetes manifests
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/ingress.yaml
        
        # Wait for deployment to complete
        kubectl rollout status deployment/kittypong-game --timeout=300s
    
    - name: Get ingress URL
      run: |
        echo "Getting ingress external IP..."
        kubectl get service -n ingress-nginx ingress-nginx-controller
        echo "Waiting for ingress to be ready..."
        kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=300s
        echo "Ingress controller is ready!"
        echo "Application will be available at the ingress controller IP"